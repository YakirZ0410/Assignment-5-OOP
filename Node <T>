package doublyLinkedList;

/**
 * Represents a node in a doubly linked list.
 *
 * @param <T> the type of data stored in the node
 */
public class Node <T>{

    private T data;
    private Node<T> previous;
    private Node<T> next;
    /**
     * Constructs a new node with the specified data.
     *
     * @param data the data to be stored in the node
     */
    public Node(T data)
    {
        this.data = data;
        this.previous = null;
        this.next = null;
    }
    /**
     * Returns the data stored in the node.
     *
     * @return the data stored in the node
     */
    public T getData() {
        return data;
    }
    /**
     * Sets the data to be stored in the node.
     *
     * @param data the data to be stored in the node
     */
    public void setData(T data) {
        this.data = data;
    }
    /**
     * Returns the previous node in the doubly linked list.
     *
     * @return the previous node
     */
    public Node<T> getPrevious() {
        return previous;
    }
    /**
     * Sets the previous node in the doubly linked list.
     *
     * @param previous the previous node to be set
     */
    public void setPrevious(Node<T> previous) {
        this.previous = previous;
    }
    /**
     * Returns the next node in the doubly linked list.
     *
     * @return the next node
     */
    public Node<T> getNext() {
        return next;
    }
    /**
     * Sets the next node in the doubly linked list.
     *
     * @param next the next node to be set
     */
    public void setNext(Node<T> next) {
        this.next = next;
    }
}
